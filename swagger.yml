swagger: "2.0"
info:
  description: "This is a sample customers CRM"
  version: "1.0.0"
  title: "Swagger CRM CRUD"
tags:
- name: "CRUD"
  description: "Customer CRM"
schemes:
- "http"
paths:
  /customers:
    get:
      tags:
      - "customers"
      summary: "Get all customers"
      description: "Returns all customers"
      operationId: "getCustomers"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Customer"
  /customers/{id}:
    post:
      tags:
      - "customer"
      summary: "Add a new customer"
      description: ""
      operationId: "addCustomer"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of customer"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "customer object that needs to be added to the store"
        required: true
        schema:
          type: array
          items:
            $ref: "#/definitions/Customer"
      responses:
        "400":
          description: "ID already existent"
    put:
      tags:
      - "customer"
      summary: "Update an existing customer"
      description: ""
      operationId: "updateCustomer"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of customer"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Customer object that needs to be updated"
        required: true
        schema:
          $ref: "#/definitions/Customer"
      responses:
        "404":
          description: "Customer not found"
    get:
      tags:
      - "customer"
      summary: "Find customer by ID"
      description: "Returns a single customer"
      operationId: "getCustomer"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of customer to return"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Customer"
        "404":
          description: "Customer not found"
    delete:
      tags:
      - "customer"
      summary: "Deletes a customer"
      description: ""
      operationId: "deleteCustomer"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Customer id to delete"
        required: true
        type: "string"
      responses:
        "404":
          description: "Customer not found"

definitions:
  Customer:
    type: "object"
    properties:
      name:
        type: "string"
        example: "Eric"
      role:
        type: "string"
        example: "elite"
      email:
        type: "string"
        example: "eric@mail.com"
      phone:
        type: "integer"
        example: "31463388"        
      contacted:
        type: "boolean"
        example: true
    xml:
      name: "Customer"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"